# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Tests map get location
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Test map get location
        run: |
          java -version
          javac -version
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/TestMapGetLoc.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar;src/;tests/" org.junit.runner.JUnitCore TestMapGetLoc

  TestPacMan_consume:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: TestPacMan consume
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestConsume
  TestGhost_move:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: TestGhost move
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestGhostMove

  TestGhost_valid_moves:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: TestGhost get_valid_moves
        run: |
          cd Projects/P3
          java -version
          javac -version 
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -Djava.awt.headless=true -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestGhostValidMoves
